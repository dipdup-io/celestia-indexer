basePath: /v1
definitions:
  handler.Error:
    properties:
      message:
        type: string
    type: object
  responses.Address:
    description: Celestia address information
    properties:
      balance:
        example: "10000000000"
        type: string
      first_height:
        example: 100
        type: integer
      hash:
        example: celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60
        type: string
      id:
        example: 321
        type: integer
    type: object
  responses.Blob:
    properties:
      commitment:
        example: vbGakK59+Non81TE3ULg5Ve5ufT9SFm/bCyY+WLR3gg=
        format: base64
        type: string
      data:
        example: b2sgZGVtbyBkYQ==
        format: base64
        type: string
      namespace:
        example: AAAAAAAAAAAAAAAAAAAAAAAAAAAAs2bWWU6FOB0=
        format: base64
        type: string
      share_version:
        example: 0
        format: integer
        type: integer
    type: object
  responses.Block:
    properties:
      app_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      blobs_size:
        example: 12354
        type: integer
      consensus_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      data_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      events_count:
        example: 18
        type: integer
      evidence_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      fee:
        example: "28347628346"
        type: string
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      height:
        example: 100
        type: integer
      id:
        example: 321
        type: integer
      last_commit_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      last_results_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      message_types:
        example:
        - MsgSend
        - MsgUnjail
        items:
          type: string
        type: array
      next_validators_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      parent_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      proposer_address:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      time:
        example: "2023-07-04T03:10:57+00:00"
        type: string
      tx_count:
        example: 12
        type: integer
      validators_hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        type: string
      version_app:
        example: "1"
        type: string
      version_block:
        example: "11"
        type: string
    type: object
  responses.Event:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 1
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx_id:
        example: 11
        format: int64
        type: integer
      type:
        enum:
        - coin_received
        - coinbase
        - coin_spent
        - burn
        - mint
        - message
        - proposer_reward
        - rewards
        - commission
        - liveness
        - attestation_request
        - transfer
        - pay_for_blobs
        - redelegate
        - withdraw_rewards
        - withdraw_commission
        - create_validator
        - delegate
        - edit_validator
        - unbond
        - tx
        - unknown
        example: commission
        format: string
        type: string
    type: object
  responses.HistogramItem:
    properties:
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      value:
        example: "2223424"
        format: string
        type: string
    type: object
  responses.Message:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 2
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx_id:
        example: 11
        format: int64
        type: integer
      type:
        enum:
        - WithdrawValidatorCommission
        - WithdrawDelegatorReward
        - EditValidator
        - BeginRedelegate
        - CreateValidator
        - Delegate
        - Undelegate
        - Unjail
        - Send
        - CreateVestingAccount
        - CreatePeriodicVestingAccount
        - PayForBlobs
        example: CreatePeriodicVestingAccount
        format: string
        type: string
    type: object
  responses.Namespace:
    properties:
      hash:
        example: U3dhZ2dlciByb2Nrcw==
        format: base64
        type: string
      id:
        example: 321
        format: integer
        type: integer
      namespace_id:
        example: 4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02
        format: binary
        type: string
      reserved:
        example: true
        type: boolean
      size:
        example: 12345
        format: integer
        type: integer
      version:
        format: byte
        type: integer
    type: object
  responses.NamespaceMessage:
    properties:
      data:
        additionalProperties: {}
        type: object
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      position:
        example: 2
        format: int64
        type: integer
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      tx:
        $ref: '#/definitions/responses.Tx'
      type:
        enum:
        - WithdrawValidatorCommission
        - WithdrawDelegatorReward
        - EditValidator
        - BeginRedelegate
        - CreateValidator
        - Delegate
        - Undelegate
        - Unjail
        - Send
        - CreateVestingAccount
        - CreatePeriodicVestingAccount
        - PayForBlobs
        example: CreatePeriodicVestingAccount
        format: string
        type: string
    type: object
  responses.SearchResponse-responses_Searchable:
    properties:
      result:
        description: 'Search result. Can be one of folowwing types: Block, Address,
          Namespace, Tx'
        type: object
      type:
        description: Result type which is in the result. Can be 'block', 'address',
          'namespace', 'tx'
        type: string
    type: object
  responses.State:
    properties:
      id:
        example: 321
        format: int64
        type: integer
      last_height:
        example: 100
        format: int64
        type: integer
      last_time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      name:
        example: indexer
        format: string
        type: string
      total_accounts:
        example: 43
        format: int64
        type: integer
      total_blobs_size:
        example: 56789
        format: int64
        type: integer
      total_fee:
        example: "312"
        format: string
        type: string
      total_tx:
        example: 23456
        format: int64
        type: integer
    type: object
  responses.Tx:
    properties:
      codespace:
        example: sdk
        format: string
        type: string
      error:
        example: ""
        format: string
        type: string
      events_count:
        example: 2
        format: int64
        type: integer
      fee:
        example: "9348"
        format: int64
        type: string
      gas_used:
        example: 4253
        format: int64
        type: integer
      gas_wanted:
        example: 9348
        format: int64
        type: integer
      hash:
        example: 652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF
        format: binary
        type: string
      height:
        example: 100
        format: int64
        type: integer
      id:
        example: 321
        format: int64
        type: integer
      memo:
        example: Transfer to private account
        format: string
        type: string
      message_types:
        example:
        - MsgSend
        - MsgUnjail
        items:
          type: string
        type: array
      messages_count:
        example: 1
        format: int64
        type: integer
      position:
        example: 11
        format: int64
        type: integer
      status:
        enum:
        - success
        - failed
        example: success
        format: string
        type: string
      time:
        example: "2023-07-04T03:10:57+00:00"
        format: date-time
        type: string
      timeout_height:
        example: 0
        format: int64
        type: integer
    type: object
host: 127.0.0.1
info:
  contact: {}
  description: This is docs of Celestia indexer API.
  title: Swagger Celestia Indexer API
  version: "1.0"
paths:
  /v1/address:
    get:
      description: List address info
      operationId: list-address
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Address'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List address info
      tags:
      - address
  /v1/address/{hash}:
    get:
      description: Get address info
      operationId: get-address
      parameters:
      - description: Hash
        in: path
        maxLength: 48
        minLength: 48
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Address'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get address info
      tags:
      - address
  /v1/block:
    get:
      description: List blocks info
      operationId: list-block
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Block'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List blocks info
      tags:
      - block
  /v1/block/{height}:
    get:
      description: Get block info
      operationId: get-block
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Block'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get block info
      tags:
      - block
  /v1/block/{height}/events:
    get:
      description: Get events from begin and end of block
      operationId: get-block-events
      parameters:
      - description: Block height
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get events from begin and end of block
      tags:
      - block
  /v1/head:
    get:
      description: Get current indexer head
      operationId: head
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.State'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get current indexer head
      tags:
      - general
  /v1/namespace:
    get:
      description: List namespace info
      operationId: list-namespace
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Block'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List namespace info
      tags:
      - namespace
  /v1/namespace/{id}:
    get:
      description: Returns array of namespace versions
      operationId: get-namespace
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Namespace'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info
      tags:
      - namespace
  /v1/namespace/{id}/{version}:
    get:
      description: Returns namespace by version byte and namespace id
      operationId: get-namespace-by-version-and-id
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Version of namespace
        in: path
        name: version
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Namespace'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info by id and version
      tags:
      - namespace
  /v1/namespace/{id}/{version}/messages:
    get:
      description: Returns namespace messages by version byte and namespace id
      operationId: get-namespace-messages
      parameters:
      - description: Namespace id in hexadecimal
        in: path
        maxLength: 56
        minLength: 56
        name: id
        required: true
        type: string
      - description: Version of namespace
        in: path
        name: version
        required: true
        type: integer
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.NamespaceMessage'
            type: array
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace messages by id and version
      tags:
      - namespace
  /v1/namespace_by_hash/{hash}:
    get:
      description: Returns namespace by base64 encoded identity
      operationId: get-namespace-base64
      parameters:
      - description: Base64-encoded namespace id and version
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Namespace'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace info by base64
      tags:
      - namespace
  /v1/namespace_by_hash/{hash}/{height}:
    get:
      description: Returns blob (bytes array)
      operationId: get-namespace-blob
      parameters:
      - description: Base64-encoded namespace id and version
        in: path
        name: hash
        required: true
        type: string
      - description: Block heigth
        in: path
        minimum: 1
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Blob'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get namespace blob on height
      tags:
      - namespace
  /v1/search:
    get:
      description: "Endpoint finds entity by hash (block, address, namespace and tx)\n\n###
        Block\n\nBlock will be found by its hash. Hash example: `652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF`.
        Hash should be hexademical and has length 64.\n\n#### Example response \n\n```json\n{\n
        \   \"type\": \"block\",\n    \"result\": {\n        \"id\": 1,\n        \"hash\":
        \"652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF\",\n        //
        ... rest fields from response.Block type\n    }\n}\n```\n\n### Tx\n\nTx will
        be found by its hash. Hash example: `652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF`.
        Tx should be hexademical and has length 64.\n\n#### Example response \n\n```json\n{\n
        \   \"type\": \"tx\",\n    \"result\": {\n        \"id\": 1,\n        \"hash\":
        \"652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF\",\n        //
        ... rest fields from response.Tx type\n    }\n}\n```\n\n### Address\n\nAddress
        will be found by its hash. Hash example: `celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60`.
        Address has prefix `celestia` and has length 47. Also it should be decoded
        by `bech32`.\n\n#### Example response \n\n```json\n{\n    \"type\": \"address\",\n
        \   \"result\": {\n        \"id\": 1,\n        \"hash\": \"celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60\",\n
        \       \"height\": 100,\n        \"balance\": \"6525472354\"\n    }\n}\n```\n\n###
        Namespace\n\nNamespace can be found by base64 hash and identity pair version
        + namespace id. \nHash example: `U3dhZ2dlciByb2Nrcw==`. \nIdentity pair example:
        `014723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02`\n\n#### Example
        response \n\n```json\n{\n    \"type\": \"namespace\",\n    \"result\": {\n
        \       \"id\": 1,\n        \"hash\": \"U3dhZ2dlciByb2Nrcw==\",\n        \"version\":
        1,\n        \"namespace_id\": \"4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02\"\n
        \       // ... rest fields from response.Namespace type\n    }\n}\n```\n"
      operationId: search
      parameters:
      - description: Search string
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SearchResponse-responses_Searchable'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Search by hash
      tags:
      - search
  /v1/stats/histogram/{table}/{function}/{timeframe}:
    get:
      description: |-
        Returns histogram by table, function and timeframe

        ### Parameters

        `table`, `function` and `column` parameters are the same as summary endpoint.


        ### Timeframe

        * `hour`
        * `day`
        * `week`
        * `month`
        * `year`
      operationId: stats-histogram
      parameters:
      - description: Table name
        enum:
        - block
        - tx
        - event
        - message
        in: path
        name: table
        required: true
        type: string
      - description: Function name
        enum:
        - min
        - max
        - avg
        - sum
        - count
        in: path
        name: function
        required: true
        type: string
      - description: Timeframe
        enum:
        - hour
        - day
        - week
        - month
        - year
        in: path
        name: timeframe
        required: true
        type: string
      - description: Column name which will be used for computation. Optional for
          count
        in: query
        name: column
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.HistogramItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get histogram
      tags:
      - stats
  /v1/stats/summary/{table}/{function}:
    get:
      description: |-
        Returns string value by passed table and function.

        ### Availiable tables
        * `block`
        * `tx`
        * `message`
        * `event`


        ### Availiable functions
        * `sum`
        * `min`
        * `max`
        * `avg`
        * `count`


        `Column` query parameter is required for functions `sum`, `min`, `max` and `avg` and should not pass for `count`.


        ###  Availiable columns and functions for tables:

        #### Block
        * `height`         -- min max
        * `time`           -- min max
        * `tx_count`       -- min max sum avg
        * `events_count`   -- min max sum avg
        * `blobs_size`     -- min max sum avg
        * `fee`            -- min max sum avg

        #### Tx
        * `height`         -- min max
        * `time`           -- min max
        * `gas_wanted`     -- min max sum avg
        * `gas_used`       -- min max sum avg
        * `timeout_height` -- min max avg
        * `events_count`   -- min max sum avg
        * `messages_count` -- min max sum avg
        * `fee`            -- min max sum avg

        #### Event
        * `height`         -- min max
        * `time`           -- min max

        #### Message
        * `height`         -- min max
        * `time`           -- min max
      operationId: stats-summary
      parameters:
      - description: Table name
        enum:
        - block
        - tx
        - event
        - message
        in: path
        name: table
        required: true
        type: string
      - description: Function name
        enum:
        - min
        - max
        - avg
        - sum
        - count
        in: path
        name: function
        required: true
        type: string
      - description: Column name which will be used for computation. Optional for
          count.
        in: query
        name: column
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get value by table and function
      tags:
      - stats
  /v1/tx:
    get:
      description: List transactions info
      operationId: list-transactions
      parameters:
      - description: Count of requested entities
        in: query
        maximum: 100
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Comma-separated status list
        enum:
        - success
        - failed
        in: query
        name: status
        type: string
      - description: Comma-separated message types list
        enum:
        - WithdrawValidatorCommission
        - WithdrawDelegatorReward
        - EditValidator
        - BeginRedelegate
        - CreateValidator
        - Delegate
        - Undelegate
        - Unjail
        - Send
        - CreateVestingAccount
        - CreatePeriodicVestingAccount
        - PayForBlobs
        in: query
        name: msg_type
        type: string
      - description: Time from in unix timestamp
        in: query
        name: from
        type: integer
      - description: Time to in unix timestamp
        in: query
        name: to
        type: integer
      - description: Block number
        in: query
        name: height
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Tx'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: List transactions info
      tags:
      - transactions
  /v1/tx/{hash}:
    get:
      description: Get transaction by hash
      operationId: get-transaction
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Tx'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction by hash
      tags:
      - transactions
  /v1/tx/{hash}/events:
    get:
      description: Get transaction events
      operationId: get-transaction-events
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Event'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction events
      tags:
      - transactions
  /v1/tx/{hash}/messages:
    get:
      description: Get transaction messages
      operationId: get-transaction-messages
      parameters:
      - description: Transaction hash in hexadecimal
        in: path
        maxLength: 64
        minLength: 64
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Message'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get transaction messages
      tags:
      - transactions
  /v1/ws:
    get:
      description: "## Documentation for websocket API\n\n### Subscribe\n\nTo receive
        updates from websocket API send `subscribe` request to server.\n\n```json\n{\n
        \   \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"<CHANNEL_NAME>\",\n
        \       \"filters\": {\n            // pass channel filters\n        }\n    }\n}\n```\n\nNow
        2 channels are supported:\n\n* `head` - receive information about new block.
        Channel does not have any filters. Subscribe message should looks like:\n\n```json\n{\n
        \   \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"head\"\n
        \   }\n}\n```\n\nIn that channel messages of `responses.Block` type will be
        sent.\n\n* `tx` - receive information about new transactions. The channel
        has filters for target receiving information. Now 2 filters are supported:\n\n```json\n{\n
        \   \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"tx\",\n
        \       \"filters\": {\n            \"status\": [  // array of transaction
        status. Can be emtpy.\n                \"success\", \n                \"failed\"\n
        \           ],\n            \"msg_type\": [  // array of containing message
        types status. Can be emtpy.\n                \"WithdrawValidatorCommission\",\n
        \               \"WithdrawDelegatorReward\",\n                \"EditValidator\",\n
        \               \"BeginRedelegate\",\n                \"CreateValidator\",\n
        \               \"Delegate\",\n                \"Undelegate\",\n                \"Unjail\",\n
        \               \"Send\",\n                \"CreateVestingAccount\",\n                \"CreatePeriodicVestingAccount\",\n
        \               \"PayForBlobs\"\n            ]\n        }\n    }\n}\n```\n\nIf
        all filers are empty subscription to all transaction will be created.\n\nIn
        that channel messages of `responses.Tx` type will be sent.\n\n\n### Unsubscribe\n\nTo
        unsubscribe send `unsubscribe` message containing one of channel name describing
        above.\n\n\n```json\n{\n    \"method\": \"unsubscribe\",\n    \"body\": {\n
        \       \"channel\": \"<CHANNEL_NAME>\",\n    }\n}\n```\n"
      operationId: websocket
      produces:
      - application/json
      responses: {}
      summary: Websocket API
      tags:
      - websocket
swagger: "2.0"
