{
    "swagger": "2.0",
    "info": {
        "description": "This is docs of Celestia indexer API.",
        "title": "Swagger Celestia Indexer API",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1",
    "basePath": "/v1",
    "paths": {
        "/v1/address": {
            "get": {
                "description": "List address info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "List address info",
                "operationId": "list-address",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}": {
            "get": {
                "description": "Get address info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address info",
                "operationId": "get-address",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Address"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block": {
            "get": {
                "description": "List blocks info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "List blocks info",
                "operationId": "list-block",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Block"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}": {
            "get": {
                "description": "Get block info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block info",
                "operationId": "get-block",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Block"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/events": {
            "get": {
                "description": "Get events from begin and end of block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get events from begin and end of block",
                "operationId": "get-block-events",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/head": {
            "get": {
                "description": "Get current indexer head",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get current indexer head",
                "operationId": "head",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.State"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/namespace": {
            "get": {
                "description": "List namespace info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "List namespace info",
                "operationId": "list-namespace",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Block"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/namespace/{id}": {
            "get": {
                "description": "Returns array of namespace versions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Get namespace info",
                "operationId": "get-namespace",
                "parameters": [
                    {
                        "maxLength": 56,
                        "minLength": 56,
                        "type": "string",
                        "description": "Namespace id in hexadecimal",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Namespace"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/namespace/{id}/{version}": {
            "get": {
                "description": "Returns namespace by version byte and namespace id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Get namespace info by id and version",
                "operationId": "get-namespace-by-version-and-id",
                "parameters": [
                    {
                        "maxLength": 56,
                        "minLength": 56,
                        "type": "string",
                        "description": "Namespace id in hexadecimal",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Version of namespace",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Namespace"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/namespace_by_hash/{hash}": {
            "get": {
                "description": "Returns namespace by base64 encoded identity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Get namespace info by base64",
                "operationId": "get-namespace-base64",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64-encoded namespace id and version",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Namespace"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/namespace_by_hash/{hash}/{height}": {
            "get": {
                "description": "Returns blob (bytes array)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "namespace"
                ],
                "summary": "Get namespace blob on height",
                "operationId": "get-namespace-blob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64-encoded namespace id and version",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block heigth",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/blob.Blob"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "description": "Search entity by hash (block, tx, account and namespace)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search by hash",
                "operationId": "search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SearchResponse-responses_Searchable"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx": {
            "get": {
                "description": "List transactions info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions info",
                "operationId": "list-transactions",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "success",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Comma-separated status list",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "WithdrawValidatorCommission",
                            "WithdrawDelegatorReward",
                            "EditValidator",
                            "BeginRedelegate",
                            "CreateValidator",
                            "Delegate",
                            "Undelegate",
                            "Unjail",
                            "Send",
                            "CreateVestingAccount",
                            "CreatePeriodicVestingAccount",
                            "PayForBlobs"
                        ],
                        "type": "string",
                        "description": "Comma-separated message types list",
                        "name": "msg_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Block number",
                        "name": "height",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Tx"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}": {
            "get": {
                "description": "Get transaction by hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction by hash",
                "operationId": "get-transaction",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Tx"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/events": {
            "get": {
                "description": "Get transaction events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction events",
                "operationId": "get-transaction-events",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/messages": {
            "get": {
                "description": "Get transaction messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction messages",
                "operationId": "get-transaction-messages",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Message"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SearchResponse-responses_Searchable": {
            "type": "object",
            "properties": {
                "result": {
                    "description": "Search result. Can be one of folowwing types: Block, Address, Namespace, Tx",
                    "type": "object"
                },
                "type": {
                    "description": "Result type which is in the result. Can be 'block', 'address', 'namespace', 'tx'",
                    "type": "string"
                }
            }
        },
        "blob.Blob": {
            "type": "object",
            "properties": {
                "commitment": {
                    "type": "string",
                    "format": "base64",
                    "example": "vbGakK59+Non81TE3ULg5Ve5ufT9SFm/bCyY+WLR3gg="
                },
                "data": {
                    "type": "string",
                    "format": "base64",
                    "example": "b2sgZGVtbyBkYQ=="
                },
                "namespace": {
                    "type": "string",
                    "format": "base64",
                    "example": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAs2bWWU6FOB0="
                },
                "share_version": {
                    "type": "integer",
                    "format": "integer",
                    "example": 0
                }
            }
        },
        "handler.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.Address": {
            "description": "Celestia address information",
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string",
                    "example": "10000000000"
                },
                "first_height": {
                    "type": "integer",
                    "example": 100
                },
                "hash": {
                    "type": "string",
                    "example": "celestia1jc92qdnty48pafummfr8ava2tjtuhfdw774w60"
                },
                "id": {
                    "type": "integer",
                    "example": 321
                }
            }
        },
        "responses.Block": {
            "type": "object",
            "properties": {
                "app_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "consensus_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "data_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "events_count": {
                    "type": "integer",
                    "example": 18
                },
                "evidence_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "fee": {
                    "type": "string",
                    "example": "28347628346"
                },
                "hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "height": {
                    "type": "integer",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "last_commit_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "last_results_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "message_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "MsgSend",
                        "MsgUnjail"
                    ]
                },
                "namespace_size": {
                    "type": "integer",
                    "example": 12354
                },
                "next_validators_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "parent_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "proposer_address": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "time": {
                    "type": "string",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_count": {
                    "type": "integer",
                    "example": 12
                },
                "validators_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "version_app": {
                    "type": "string",
                    "example": "1"
                },
                "version_block": {
                    "type": "string",
                    "example": "11"
                }
            }
        },
        "responses.Event": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "type": {
                    "type": "string",
                    "format": "string",
                    "enum": [
                        "coin_received",
                        "coinbase",
                        "coin_spent",
                        "burn",
                        "mint",
                        "message",
                        "proposer_reward",
                        "rewards",
                        "commission",
                        "liveness",
                        "attestation_request",
                        "transfer",
                        "pay_for_blobs",
                        "redelegate",
                        "withdraw_rewards",
                        "withdraw_commission",
                        "create_validator",
                        "delegate",
                        "edit_validator",
                        "unbond",
                        "tx",
                        "unknown"
                    ],
                    "example": "commission"
                }
            }
        },
        "responses.Message": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "type": {
                    "type": "string",
                    "format": "string",
                    "enum": [
                        "WithdrawValidatorCommission",
                        "WithdrawDelegatorReward",
                        "EditValidator",
                        "BeginRedelegate",
                        "CreateValidator",
                        "Delegate",
                        "Undelegate",
                        "Unjail",
                        "Send",
                        "CreateVestingAccount",
                        "CreatePeriodicVestingAccount",
                        "PayForBlobs"
                    ],
                    "example": "CreatePeriodicVestingAccount"
                }
            }
        },
        "responses.Namespace": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "format": "base64",
                    "example": "U3dhZ2dlciByb2Nrcw=="
                },
                "id": {
                    "type": "integer",
                    "format": "integer",
                    "example": 321
                },
                "namespace_id": {
                    "type": "string",
                    "format": "binary",
                    "example": "4723ce10b187716adfc55ff7e6d9179c226e6b5440b02577cca49d02"
                },
                "reserved": {
                    "type": "boolean",
                    "example": true
                },
                "size": {
                    "type": "integer",
                    "format": "integer",
                    "example": 12345
                },
                "version": {
                    "type": "integer",
                    "format": "byte"
                }
            }
        },
        "responses.State": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "last_height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "last_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "example": "indexer"
                },
                "total_accounts": {
                    "type": "integer",
                    "format": "int64",
                    "example": 43
                },
                "total_fee": {
                    "type": "string",
                    "format": "string",
                    "example": "312"
                },
                "total_namespace_size": {
                    "type": "integer",
                    "format": "int64",
                    "example": 56789
                },
                "total_tx": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23456
                }
            }
        },
        "responses.Tx": {
            "type": "object",
            "properties": {
                "codespace": {
                    "type": "string",
                    "format": "string",
                    "example": "sdk"
                },
                "error": {
                    "type": "string",
                    "format": "string",
                    "example": ""
                },
                "events_count": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2
                },
                "fee": {
                    "type": "string",
                    "format": "int64",
                    "example": "9348"
                },
                "gas_used": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4253
                },
                "gas_wanted": {
                    "type": "integer",
                    "format": "int64",
                    "example": 9348
                },
                "hash": {
                    "type": "string",
                    "format": "binary",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "memo": {
                    "type": "string",
                    "format": "string",
                    "example": "Transfer to private account"
                },
                "message_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "MsgSend",
                        "MsgUnjail"
                    ]
                },
                "messages_count": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "status": {
                    "type": "string",
                    "format": "string",
                    "enum": [
                        "success",
                        "failed"
                    ],
                    "example": "success"
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "timeout_height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                }
            }
        }
    }
}